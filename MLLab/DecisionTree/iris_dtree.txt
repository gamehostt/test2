from collections import Counter

# Find indices of the k-nearest neighbors
k = 9
nearest_indices = np.argsort(distances)[:k]

# Get labels of the k-nearest neighbors
nearest_labels = y_train.iloc[nearest_indices]

# Perform unweighted voting to classify the risk factor
predicted_label = Counter(nearest_labels).most_common(1)[0][0]

# Map predicted label back to original label
predicted_risk = 'Good risk' if predicted_label == 1 else 'Bad loss'

print("Predicted risk for the new record (#10) using unweighted voting:", predicted_risk)


data = pd.read_csv("data4_19.csv")

X = data.iloc[:, :-1]  
y = data.iloc[:, -1]  

clf = DecisionTreeClassifier()
clf.fit(X, y)

new_flower_attributes = [[5.2, 3.1, 1.4, 0.2]]

predicted_species = clf.predict(new_flower_attributes)

print("Predicted Species:", predicted_species[0])
